(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){(function(global){var angular=typeof window!=="undefined"?window["angular"]:typeof global!=="undefined"?global["angular"]:null;function AccountController($scope,$filter,auth,flash,formRespond,identity,session){var personaFilter=$filter("persona");$scope.subscriptionDescription={reply:"Someone replies to one of my annotations"};function onSuccess(form,response){for(var type in response.flash){response.flash[type].map(function(message){flash[type](message)})}form.$setPristine();var formModel=form.$name.slice(0,-4);$scope[formModel]={};$scope.$broadcast("formState",form.$name,"success");$scope.email=response.email}function onDelete(form,response){identity.logout();onSuccess(form,response)}function onError(form,response){if(response.status>=400&&response.status<500){formRespond(form,response.data.errors)}else{if(response.data.flash){for(type in response.data.flash){response.data.flash[type].map(function(message){flash[type](message)})}}else{flash.error("Sorry, we were unable to perform your request")}}$scope.$broadcast("formState",form.$name,"")}$scope.tab="Account";session.profile().$promise.then(function(result){$scope.subscriptions=result.subscriptions;$scope.email=result.email});$scope.editProfile={};$scope.changePassword={};$scope.deleteAccount={};$scope.delete=function(form){if(!form.$valid){return}var username=personaFilter(auth.user);var packet={username:username,pwd:form.pwd.$modelValue};var successHandler=angular.bind(null,onDelete,form);var errorHandler=angular.bind(null,onError,form);var promise=session.disable_user(packet).$promise;return promise.then(successHandler,errorHandler)};$scope.submit=function(form){formRespond(form);if(!form.$valid){return}var username=personaFilter(auth.user);var packet={username:username,pwd:form.pwd.$modelValue,password:form.password.$modelValue};var successHandler=angular.bind(null,onSuccess,form);var errorHandler=angular.bind(null,onError,form);$scope.$broadcast("formState",form.$name,"loading");var promise=session.edit_profile(packet).$promise;return promise.then(successHandler,errorHandler)};$scope.changeEmailSubmit=function(form){formRespond(form);if(!form.$valid){return}var username=personaFilter(auth.user);var packet={username:username,pwd:form.pwd.$modelValue,email:form.email.$modelValue,emailAgain:form.emailAgain.$modelValue};var successHandler=angular.bind(null,onSuccess,form);var errorHandler=angular.bind(null,onError,form);$scope.$broadcast("formState",form.$name,"loading");var promise=session.edit_profile(packet).$promise;return promise.then(successHandler,errorHandler)};$scope.updated=function(index,form){var packet={username:auth.user,subscriptions:JSON.stringify($scope.subscriptions[index])};var successHandler=angular.bind(null,onSuccess,form);var errorHandler=angular.bind(null,onError,form);var promise=session.edit_profile(packet).$promise;return promise.then(successHandler,errorHandler)}}AccountController.$inject=["$scope","$filter","auth","flash","formRespond","identity","session"];angular.module("h").controller("AccountController",AccountController)}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{}],2:[function(require,module,exports){(function(global){var angular=typeof window!=="undefined"?window["angular"]:typeof global!=="undefined"?global["angular"]:null;function AuthAppController($location,$scope,$timeout,$window,session){function onlogin(){window.location.href="/stream"}$scope.account={};$scope.model={};$scope.account.tab=$location.path().split("/")[1];$scope.$on("auth",function(event,err,data){if(data!=null?data.userid:void 0){$timeout(onlogin,1e3)}});$scope.$watch("account.tab",function(tab,old){if(tab!==old){$location.path("/"+tab)}});session.load(function(data){if(data.userid){onlogin()}})}AuthAppController.$inject=["$location","$scope","$timeout","$window","session"];function AuthPageController($routeParams,$scope){$scope.model.code=$routeParams.code;$scope.hasActivationCode=!!$routeParams.code}AuthPageController.$inject=["$routeParams","$scope"];function configure($httpProvider,$locationProvider,$routeProvider){$httpProvider.defaults.xsrfHeaderName="X-CSRF-Token";$locationProvider.html5Mode(true);$routeProvider.when("/login",{controller:"AuthPageController",templateUrl:"auth.html"});$routeProvider.when("/register",{controller:"AuthPageController",templateUrl:"auth.html"});$routeProvider.when("/forgot_password",{controller:"AuthPageController",templateUrl:"auth.html"});$routeProvider.when("/reset_password/:code?",{controller:"AuthPageController",templateUrl:"auth.html"})}configure.$inject=["$httpProvider","$locationProvider","$routeProvider"];angular.module("h").config(configure).controller("AuthAppController",AuthAppController).controller("AuthPageController",AuthPageController);require("./account-controller");require("./auth-controller")}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{"./account-controller":1,"./auth-controller":3}],3:[function(require,module,exports){function AuthController($scope,$timeout,flash,session,formRespond){var pendingTimeout=null;function success(data){if(data.userid){$scope.$emit("auth",null,data)}$scope.account.tab=function(){switch($scope.account.tab){case"register":return"login";case"forgot_password":return"reset_password";case"reset_password":return"login";default:return $scope.account.tab}}();angular.copy({},$scope.model);if($scope.form!=null){$scope.form.$setPristine()}}function failure(form,response){var errors,reason;try{errors=response.data.errors;reason=response.data.reason}catch(e){reason="Oops, something went wrong on the server. "+"Please try again later!"}return formRespond(form,errors,reason)}function timeout(){angular.copy({},$scope.model);if($scope.form!=null){$scope.form.$setPristine()}flash.info("For your security, "+"the forms have been reset due to inactivity.")}function cancelTimeout(){if(pendingTimeout==null){return}$timeout.cancel(pendingTimeout);pendingTimeout=null}this.submit=function submit(form){formRespond(form);if(!form.$valid){return}$scope.$broadcast("formState",form.$name,"loading");var handler=session[form.$name];var _failure=angular.bind(this,failure,form);var res=handler($scope.model,success,_failure);res.$promise.finally(function(){return $scope.$broadcast("formState",form.$name,"")})};if($scope.account==null){$scope.account={tab:"login"}}if($scope.model==null){$scope.model={}}var removeDestroyHandler=$scope.$on("$destroy",function(){cancelTimeout(pendingTimeout);$scope.$emit("auth","cancel")});$scope.$on("auth",removeDestroyHandler);$scope.$watchCollection("model",function(value){cancelTimeout(pendingTimeout);if(value&&!angular.equals(value,{})){pendingTimeout=$timeout(timeout,3e5)}})}AuthController.$inject=["$scope","$timeout","flash","session","formRespond"];angular.module("h").controller("AuthController",AuthController)},{}]},{},[2]);