(function(angular){"use strict";angular.module("angulartics.google.analytics",["angulartics"]).config(["$analyticsProvider",function($analyticsProvider){$analyticsProvider.settings.trackRelativePath=true;$analyticsProvider.settings.ga={additionalAccountNames:undefined};$analyticsProvider.registerPageTrack(function(path){if(window._gaq)_gaq.push(["_trackPageview",path]);if(window.ga){ga("send","pageview",path);angular.forEach($analyticsProvider.settings.ga.additionalAccountNames,function(accountName){ga(accountName+".send","pageview",path)})}});$analyticsProvider.registerEventTrack(function(action,properties){if(!properties||!properties.category){return}if(properties.value){var parsed=parseInt(properties.value,10);properties.value=isNaN(parsed)?0:parsed}if(window.ga){var eventOptions={eventCategory:properties.category||null,eventAction:action||null,eventLabel:properties.label||null,eventValue:properties.value||null,nonInteraction:properties.noninteraction||null};for(var idx=1;idx<=20;idx++){if(properties["dimension"+idx.toString()]){eventOptions["dimension"+idx.toString()]=properties["dimension"+idx.toString()]}if(properties["metric"+idx.toString()]){eventOptions["metric"+idx.toString()]=properties["metric"+idx.toString()]}}ga("send","event",eventOptions);angular.forEach($analyticsProvider.settings.ga.additionalAccountNames,function(accountName){ga(accountName+".send","event",eventOptions)})}else if(window._gaq){_gaq.push(["_trackEvent",properties.category,action,properties.label,properties.value,properties.noninteraction])}})}])})(angular);