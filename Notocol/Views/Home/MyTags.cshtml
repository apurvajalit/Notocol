
@using Model
@using Newtonsoft.Json
@model IList<Model.Tag>
@{
    ViewBag.Title = "Tags";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="http://www.jqueryscript.net/css/jquerysctipttop.css" rel="stylesheet" type="text/css">
<link href="~/Content/jquery.orgchart.css" media="all" rel="stylesheet" type="text/css" />

@section scripts
{
    <script src="http://code.jquery.com/jquery-1.11.1.min.js"></script>

    <script src="~/Scripts/OrgChart/jquery.orgchart.js"></script>
    <script type="text/javascript">
    //$("txtSearchTags").onchange(function() {
    //    alert(this.val);
    //});
    function SearchTags(parameters) {

    }

    var testData = [
        {id: 1, Name: 'My Organization', parentID: 0},
        {id: 2, Name: 'CEO Office', parentID: 1},
        {id: 3, Name: 'Division 1', parentID: 1},
        {id: 4, Name: 'Division 2', parentID: 1},
        {id: 6, Name: 'Division 3', parentID: 1},
        {id: 7, Name: 'Division 4', parentID: 1},
        {id: 8, Name: 'Division 5', parentID: 1},
        {id: 5, Name: 'Sub Division', parentID: 3},
        
    ];
    var tagArray = @Html.Raw(Json.Encode(Model).Replace("\"ID\"","\"id\""));
        console.log(tagArray);
        console.log(testData);

    $(function () {
        //alert('org');
        org_chart = $('#orgChart').orgChart({
            data: tagArray, // your data
            showControls: true, // display add or remove node button.
            allowEdit: true, // click the node's title to edit
            onAddNode: function (node) { },
            onDeleteNode: function (node) { },
            onClickNode: function (node) { },
            newNodeText: 'Add Tag' // text of add button
        });
    });

    </script>
}
<h2>Tags</h2>
Search Tags : <input type="text" id="txtSearchTags" onchange="SearchTags()"/>
<ul>
    @foreach (Tag objTag in Model)
    {
        <li>
            @objTag.Name 
        </li>
        
    }
</ul>

<div id="orgChart"></div>