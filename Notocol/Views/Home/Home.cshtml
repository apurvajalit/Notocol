@{
    
    ViewBag.Title = "Home";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section css{
    <link href="~/Content/bootstrap-tagsinput.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/notocol-home.css" rel="stylesheet" type="text/css" />
    <link href='//fonts.googleapis.com/css?family=Source+Sans+Pro:400,600' rel='stylesheet' type='text/css'>
}
@section afterAngular{
    <script src="~/Scripts/notocol/notocolApp.js"></script>
}
<div>
    <div id="searchBar" class="row top-buffer">
        <div class="col-sm-12">
            <div class="col-sm-12 text-center">
                <form class="form-inline" role="form" id="searchParamters" style="min-width:100%">
                    <input type="text" class="form-control" id="keyword" placeholder="Enter keywords for search" value=@ViewBag.QueryFilter>
                    <label id="tag-tree" @*style="position: relative; top: -30px; left: -73px;"*@>under</label>
                    @*<tags-input ng-model="tags" style="position: relative; top: -59px; width: 300px;left:514px"></tags-input>*@


                    <input type="text" id="filterTag" data-provide="typeahead" placeholder="Enter tags to filter">
                    @*<button class="btn btn-default" id="searchForPages">Search</button>*@
                </form>

                <div class="user-filter" style="visibility:hidden">
                    <span class="tag label label-info">
                        User:
                        <span id="username-text"></span>
                        <a href="#" id="remove-user-filter"><i class="remove glyphicon glyphicon-remove-sign glyphicon-white"></i></a>
                    </span>
                </div>

                <br />
            </div>
        </div>
    </div>
    

    <div style="float:right">
        <button class="btn btn-default"><span class="glyphicon glyphicon-plus"></span>@Html.ActionLink("Upload new file", "UploadFile", "File")</button>

    </div>
    <hr size="2" />
    <div class="row" id="tabs">
        <div class="col-sm-12">
            <ul class="nav nav-tabs">
                <li class="active" data-toggle="tab" value=0><a href="#MyNotesTab">My Notes</a></li>
                <li data-toggle="tab" value=1><a href="#OthersTab">Others</a></li>
            </ul>
        </div>
    </div>

    

    <div id="dashboard-data">
        <div class="row top-buffer">
            <div class="col-sm-12">
                <button type="button" class="btn btn-default" style="float:right" id="refreshPages"><span class="glyphicon glyphicon-refresh"></span></button>
            </div>
        </div>
        <br />
        <div class="row top-buffer" style="min-height: 100vh">
            <div class="col-sm-12 min-content-height ">
                <div id="pages" class="container table-container"></div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script src="~/Scripts/boostrap3-typeahead.min.js" type="text/javascript"></script>
    <script src="~/Scripts/bootstrap-tagsinput.js" type="text/javascript"></script>
    
    <script>

    var getAllTagNamesUrl = "/Tag/GetAllTags";
    var searchTagString= "";
    var sourceListUrl = "/Source/SourceItems";
    var userSeleted = null;
    var tabSelected = 0;
    var userFilter=null;

    
    function GetPages() {
        var keywordsEntered = $('#keyword').val();
        var tagsFilter = $('#filterTag').val();
        console.log("Values: keywords:"+keywordsEntered+" tags: "+tagsFilter+" user:"+userFilter);
        if(keywordsEntered.length > 0 || tagsFilter.length > 0 || userFilter != null){
            console.log("Sending search event");
            sendTrackEvent(
                    "Searched On Home",
                    {
                        "user": '@Session["userName"]',
                        "keywordSearch": $('#keyword').val() ,
                        "tagSearch": $('#filterTag').val() ,
                        "userFilter" : userFilter,
                        "tab": tabSelected == 0?'Own':'Others'

                    }
                );
        }
        
        if(tabSelected != 0){
            sendTrackEvent(
                    "Viewed Links on Others",
                    {
                        "user": '@Session["userName"]',
                        

                    }
                );
        }


        var userID = '@Session["userID"]';
        $.ajax({
            // Reload the pages based on current given filter
            url: sourceListUrl,
            type: 'Get',
            dataType:"html",
            data: {
                "query": (keywordsEntered.length > 0)?keywordsEntered: null,
                "user": userFilter == null ? null:userFilter,
                "tagFilter": (tagsFilter.length > 0)?tagsFilter:null,
                "sourceType": tabSelected == 0?1:3},

        })
        .success(function (data) {

            $("#pages").html(data);

        })
        .error(function(xhr, status){
            console.log("something seems wrong with status " + status + " " + xhr);
            setTimeout(GetPages, 5000);

        });
    }


    function AddTagToTagInput(value){
        $('#filterTag').tagsinput('add', {'text': value});
    };

    function AddUserFilter(username){
        userFilter = username;
        console.log("Setting userFiler as "+userFilter);
        tabSelected = 1;
        GetPages();
        $('#username-text').text(username)
        $('.user-filter').css("visibility", "visible")
        $('.nav-tabs a[href="#' + 'OthersTab'+ '"]').tab('show');
        return false;
    }

    function RemoveUserFilter(){
        userFilter = null;
        GetPages();
        $('.user-filter').css("visibility", "hidden")
        return false;
    }

    $(function(){

        var prefilledTags = '@(ViewBag.TagFilter)';

        $('#filterTag').tagsinput({
            itemValue: 'text',
            itemText: 'text',
            typeahead: {

                source: function (query, process) {
                    return $.get("/api/Tag/Tags?tagQuery="+ query);
                },
                minLength: 2,
                displayKey: 'text',
                //source: tagData,
                afterSelect: function (val) {
                    this.$element.val("");
                },
                displayText:function(a) {
                    return a
                },
                autoSelect: true,
            }
        });

        if(prefilledTags){
            $.each(prefilledTags.split(','), function(index, value) {
                AddTagToTagInput(value);
            });

        }
        GetPages();
        $('[data-toggle="tab"]').click(function(e) {
            var $this = $(this);
            tabSelected = $this.attr('value');
            GetPages();
            //UpdateTagNameSource();
            $this.tab('show');

            return false;
        });

        $("#refreshPages").on("click", function () {
            GetPages();
        });

        $("#searchForPages").on("click", function () {
            GetPages();
        });



        $('#remove-user-filter').on('click', RemoveUserFilter);
        $("#filterTag").on("change", GetPages);
        $('#keyword').keypress(function(e) {
            if(e.keyCode == 13) {

                GetPages();


            }

        });

    });



</script>
    
    <script>

        if (@ViewBag.UserLogin == 1){
            var editorExtensionId = "bcdabflpgoedlefkdiaedmeokndnfafa";
            chrome.runtime.sendMessage(editorExtensionId, {type: "UserLogin"})
        }

    </script>

    <script>
        $(function(){
            sendTrackEvent(
              "Visted Home",
              {"user": '@Session["userName"]'}
            );
        });
    </script>
}    