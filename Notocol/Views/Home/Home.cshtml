@using Model
@model IList<Tag>
@{
    
    ViewBag.Title = "Home";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    
    .top-buffer {  }

    body,html{
        height:100%;

    }
     #outer {
        position: relative;
    }
    #outer a {
        position: absolute;
        top: 0;
        left: 0;
    }
    #outer input {
         text-indent: 16px;
    }

    .left-dotted-border{
        border-left: 1px dotted  #333;
    }
    .bottom-dotted-border{
        border-bottom: 1px dotted  #333;
    }
    .min-content-height{
        min-height:100%;
    }
     #dashboard-data {
        width: 100%;
        height: 100%;
        min-height: 50vh;
        display: block;
    }
     
    .pageBox{
        border: 1px solid gray ;
        border-radius:10px;
        min-height:150px;
        position:relative;
        margin-bottom:10px;
        
     }

    .tagsText{
        position: absolute;
        bottom: 2px;
        left: 5px;
        font-size:12px ;
        background-color:#F9F9F9;
        
    }
    .viewNotesButton{
        position: absolute;
        bottom: 2px;
        right: 5px;
    }
    .single-note-box{
        background-color:#F9F9F9;
  
        border-radius:5px;
        margin-bottom:3%;
     }

    .scrollable-menu {
    height: auto;
    max-height: 200px;
    overflow-x: hidden;
}
</style>

<div class="container" id="searchBar" style="min-height:100%">
    <div class="row top-buffer">
        <div class="col-sm-12 text-center">
            <form class="form-inline" role="form" id="searchParamters">
                <div class="form-group">
                    <label id="search">Search</label>
                </div>

                <div class="form-group">
                    <label class="sr-only" id="keywordlabel"></label>
                    <input type="text" class="form-control" id="keyword" placeholder="Enter keywords">
                </div>

                <div class="form-group">
                    <label id="tag-tree">under</label>
                </div>

                <div class="form-group">
                    <input type="text" class="form-control" id="tag" placeholder="tag">

                </div>
                <div class="btn-group">
                    <a class="btn btn-primary dropdown-toggle" data-toggle="dropdown" href="#">All tags<span class="caret"></span></a>
                    <ul class="dropdown-menu scrollable-menu" role="menu">
                        
                        <li value="0"><a href="#">All tags</a></li>
                        <li class="divider"></li>
                        @foreach (var tag in Model)
                        {
                            <li value="@tag.ID"><a href="#">@tag.Name</a></li>
                        }

                        
                    </ul>
                </div>

        


        </form>
        <br />
        <button class="btn btn-default " id="searchForPages">Search</button>
    </div> 
    </div>
    

</div>
<hr size="2" />

<div id="dashboard-data" class="container-fluid">
    <div class="row">
        <div class="col-sm-12">
            <div id="newPageAddition" hidden="hidden">
                <div>
                    <button type="button" class="btn btn-default" id="GetNewPageData">Add new Page</button>

                </div>
                <div class="top-buffer" id="NewPageInfo" hidden="hidden">
                    <form class="form-group role=" form" id="newPageDetails">
                        <div class="form-group">
                            <input type="text" class="form-control" id="pageDesc" placeholder="Enter Title/Note ">
                        </div>

                        <div class="form-group">
                            <input type="text" class="form-control" id="pageURL" placeholder="Enter URL">
                        </div>

                        <div class="form-group">
                            <input type="text" class="form-control" id="tags" placeholder="Enter tags">
                        </div>

                        <button type="submit" class="btn btn-default" id="addNewPage">Save Page</button>
                    </form>
                    <hr size="2" />

                </div>
            </div>
            <div class="top-buffer">
                <button type="button" class="btn btn-default" style="float:right" id="refreshPages">Reload Pages</button>
            </div>
        </div>
    </div>

    <br />
    <div class="row top-buffer">
        <div class="col-sm-12 min-content-height " style="min-height: 100vh">
            <div id="pages">

                @*<div>  @Html.Action("SourceItems", "Home", Model) </div>*@
                @*@{Html.RenderPartial("SourceItems", Model);}*@
            </div>

        </div>
    </div>

</div>

@section scripts
{
    <script type="text/javascript">
        var userID = '@Session["userID"]'
        $(document).ready(function() {
           // $("#NewPageInfo").hide();

            $("#GetNewPageData").click(function() {

                $("#NewPageInfo").show();
                $("#GetNewPageData").hide();
            });

            $("#addNewPage").click(function() {
                var url = $("#pageURL").val();
                var note = $("#pageDesc").val();
                var tagnames = $("#tags").val().split(",");

                var tagData = [];

                for (var i = 0; i < tagnames.length; i++) {
                    tagData[tagData.length] = {
                        "ID": "0",
                        "Name": tagnames[i],
                        "ParentID": "1",
                        "UserID": userID
                    };
                }

                var srcData = {
                    "Source": {
                        "ID": 0,
                        "UserID": userID,
                        "Title": "Testing",
                        "Link": url,
                        "Summary": note,
                        "ReadLater": false,
                        "SaveOffline": false,
                        "Privacy": false,
                        "Rating": 0,
                        "ModifiedAt": Date()
                    },
                    "Tags": tagData
                }

                // Script to add Source to database.
                $.ajax({
                    type: "POST",
                    dataType: "application/json",
                    data: srcData,
                    url: 'http://localhost:5555/api/Source',
                    success: function(data) {
                        alert(data);
                    },
                    error: function(XMLHttpRequest, textStatus, errorThrown) {
                        alert(errorThrown);
                    }
                });
                $("#NewPageInfo").hide();
                $("#GetNewPageData").show();
            });
        });

    </script>
    <script>
        var searchTagString= "";
        function getPages() {
            var keywordsEntered = $('#keyword').val();
            //var tagsEntered = $('#tag').val();
            
            var userID = '@Session["userID"]';
            $.ajax({
                // Reload the pages based on current given filter
                url: "/Home/SourceItems",
                type: 'Get',
                data: { "keywordFilter": keywordsEntered, "tagString": searchTagString, "userID": userID},
                datatype: 'html'
            })
            .success(function (data) {
                console.log("For keywords:" + keywordsEntered + " and tags:" + searchTagString + " received data");
                $("#pages").html(data);

            })
            .error(function(xhr, status){
                console.log("something seems wrong with status " + status + " " + xhr);
                setTimeout(getPages, 5000);

            });
        }

        $(function(){
            //Fetch all user tags
            getPages();
            $("#refreshPages").on("click", function () {
                getPages();
            });

            $("#searchForPages").on("click", function () {
                getPages();
            });
            

            $(".dropdown-menu li a").click(function(){
                var selText = $(this).text();
                $(this).parents('.btn-group').find('.dropdown-toggle').html(selText+' <span class="caret"></span>');
                if(selText == "All tags") searchTagString = "";
                else searchTagString=selText;
                getPages();
            });
        });

        if (@ViewBag.RefreshExtension ) {
            // The ID of the extension we want to talk to.
            var editorExtensionId = "kdnpencneajimjghgpodkjilppipomop";

            // Make a simple request:
            chrome.runtime.sendMessage(editorExtensionId, { reloadExtension: "true" },
              function (response) {

              });
        }
    
        

        

    </script>

    
    

    


}    