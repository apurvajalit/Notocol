@using Model
@model IList<Source>
@{
    
    ViewBag.Title = "Home";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    
    .top-buffer { margin-top:3%; }

    body,html{
        height:100%;

    }
     #outer {
        position: relative;
    }
    #outer a {
        position: absolute;
        top: 0;
        left: 0;
    }
    #outer input {
         text-indent: 16px;
    }

    .left-dotted-border{
        border-left: 1px dotted  #333;
    }
    .bottom-dotted-border{
        border-bottom: 1px dotted  #333;
    }
    .min-content-height{
        min-height:100%;
    }
     #dashboard-data {
        width: 100%;
        height: 100%;
        min-height: 50vh;
        display: block;
    }
     
    .pageBox{
        border: 1px solid gray ;
        border-radius:10px;
        min-height:150px;
        position:relative;
        margin-bottom:10px;
        
     }

    .tagsText{
        position: absolute;
        bottom: 2px;
        left: 5px;
        font-size:12px ;
        background-color:aliceblue;
        
    }
    .viewNotesButton{
        position: absolute;
        bottom: 2px;
        right: 5px;
    }
</style>

<div class="container" id="searchBar" style="min-height:100%">
    <div class="row top-buffer">
        <div class="col-sm-12 text-center">
            <form class="form-inline" role="form" id="searchParamters">
                <div class="form-group">
                    <label id="search">Search</label>
                </div>

                <div class="form-group">
                    <label class="sr-only" id="keywordlabel"></label>
                    <input type="text" class="form-control" id="keyword" placeholder="Enter keywords">
                </div>
                
                <div class="form-group">
                    <label id="tag-tree">under</label>
                </div>
                
                <div class="form-group">
                    <input type="text" class="form-control" id="tag" placeholder="tag">
                    <ul id="myTags" hidden="hidden"></ul>
                </div>
            
                           

            </form>
            <button type="submit" class="btn btn-default" id="searchForPages">Search</button>
        </div>
    </div>
    

</div>
<hr size="2" />

<div id="dashboard-data" class="container-fluid">
    <div class="row">
        <div class="col-sm-12 min-content-height" style="min-height: 100vh">
            <p> My Content </p>
            <div>
                <button type="button" class="btn btn-default" id="GetNewPageData">Add new Page</button>

            </div>
            <div class="top-buffer" id="NewPageInfo">
                <form class="form-group role=" form" id="newPageDetails">
                    <div class="form-group">
                        <input type="text" class="form-control" id="pageDesc" placeholder="Enter Title/Note ">
                    </div>

                    <div class="form-group">
                        <input type="text" class="form-control" id="pageURL" placeholder="Enter URL">
                    </div>

                    <div class="form-group">
                        <input type="text" class="form-control" id="tags" placeholder="Enter tags">
                    </div>

                    <button type="submit" class="btn btn-default" id="addNewPage">Save Page</button>
                </form>
                <hr size="2"/>

            </div>
            <div>
                <br />
                <button type="button" class="btn btn-default" style="float:right" id="refreshPages">Reload Pages</button>
                <br />
            </div>

            <div id="pages" class="top-buffer">
                    
                @*<div>  @Html.Action("SourceItems", "Home", Model) </div>*@
                @*@{Html.RenderPartial("SourceItems", Model);}*@
            </div> 

        </div>

    </div>
</div>

@section scripts
{
    <script type="text/javascript">
        $(document).ready(function() {
            $("#NewPageInfo").hide();
           
            $("#GetNewPageData").click(function() {

                $("#NewPageInfo").show();
                $("#GetNewPageData").hide();
            });

            $("#addNewPage").click(function() {
                var url = $("#pageURL").val();
                var note = $("#pageDesc").val();
                var tagnames = $("#tags").val().split(",");

                var tagData = [];
                
                for (var i = 0; i < tagnames.length; i++) {
                    tagData[tagData.length] = {
                        "ID": "0",
                        "Name": tagnames[i],
                        "ParentID": "1",
                        "UserID": "2"
                    };
                }
  
                var srcData = {
                    "Source": {
                        "ID": 0,
                        "UserID": 2,
                        "Title": "Testing",
                        "Link": url,
                        "Summary": note,
                        "ReadLater": false,
                        "SaveOffline": false,
                        "Privacy": false,
                        "Rating": 0,
                        "ModifiedAt": Date()
                    },
                    "Tags": tagData
                }

                // Script to add Source to database.
                $.ajax({
                    type: "POST",
                    dataType: "application/json",
                    data: srcData,
                    url: 'http://localhost:5555/api/Source',
                    success: function(data) {
                        alert(data);
                    },
                    error: function(XMLHttpRequest, textStatus, errorThrown) {
                        alert(errorThrown);
                    }
                });
                $("#NewPageInfo").hide();
                $("#GetNewPageData").show();
            });
        });

    </script>
    
    <script>
        function getPages() {
            var keywordsEntered = $('#keyword').val();
            var tagsEntered = $('#tag').val();
            var userID = 2;
            $.ajax({
                // Reload the pages based on current given filter
                url: "/Home/SourceItems",
                type: 'Get',
                data: { "keywordFilter": keywordsEntered, "tagFilter": tagsEntered, "userID": userID},
                datatype: 'html'
            })
            .success(function (data) {
               console.log("For keywords:" + keywordsEntered + " and tags:" + tagsEntered + " received data");
                $("#pages").html(data);

            })
            .error(function(xhr, status){
                console.log("something seems wrong with status " + status + " " + xhr);
                setTimeout(getPages, 5000);
                
            });
        }

        $("#refreshPages").on("click", function () {
            getPages();
        });

        $("#searchForPages").on("click", function () {
            getPages();
        });
        getPages();

    </script>

    <script src="~/Scripts/jquery-ui-1.11.4.min.js"></script>
    <script src="~/Scripts/tag-it.js"></script>
    <script>
        function getTags(request, response) {
            $.ajax({
                url: "http://localhost:5555/api/Tag",
                datatype: "json",
                data: {
                    strsearch: request.term
                },
                success: function (data) {
                    response($.map(data, function (item) {
                        return {
                            label: item.name, //Use rest of the data to map IDs
                            value: item.Name
                        }
                    }));
                }
            });
        }

        $(document).ready(function () {
            $("#mytags").tagit({
                allowspaces: true,
                autocomplete: {
                    source: getTags,
                    minLength: 1
                }

            });

        });

    </script>
}    