@using Model.Extended
@model IList<SourceData>

@{
    int count = 0;
    foreach (var source in Model)
    {


        if (count % 4 == 0)
        {
            @:<div class="row table-row">
        }
        count++;

        <div class="col-sm-3 table-col">

            <div style="padding-bottom:15px">
                @if (!(source.Url.StartsWith("localFile")))
                {
                    <a href="@source.Url" target="_blank" class="page-title text-info">@source.Title</a>

                }
                else
                {
                    <p class="page-title text-info">@source.Title</p>
                }
                <p style="color:lightgray;font-style:italic">-@source.UserName</p>
                <p>@source.Summary</p>
                <div id="pageTags">
                        <ul class="list-inline">
                            @{if (source.Tags != null || source.Tags.Count > 0)
                            {
                                int i = 0;
                                for (; i < source.Tags.Count; i++)
                                {
                                    var tagName = "\"" + source.Tags[i].Name + "\"";
                                    <li><a href="#" onclick="AddTagToTagInput(@tagName)"><span class="label label-default"> @source.Tags[i].Name</span></a> </li>

                                }
                            }
                            }
                        </ul>
                    </div>
                
            </div>
            <div> @*style="margin-top:10px">
                <div class="page-element-options">
                    <span class="glyphicon glyphicon-trash"></span>
                </div>*@
                <div class="viewNotesButton">
                    <button class="btn btn-default btn-xs " href="@Url.Action("NoteList", "Notes", new { sourceID = @source.ID })" data-toggle="modal" data-target='#notesModal'>View Notes</button>
                </div>
            </div>
    </div>

        if (((count) % 4 == 0) || count == Model.Count)
        {
            @:</div>


        }


    }
}

<div class="modal" id="notesModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="mymodallabel">Notes</h4>
            </div>
            <div class="modal-body"></div>
        </div>

        <div class="modal-footer">

        </div>

    </div>
</div>
<script>
    $('body').on('hidden.bs.modal', '.modal', function () {
        $(this).removeData('bs.modal').find(".modal-content").empty();;
    });
</script>















